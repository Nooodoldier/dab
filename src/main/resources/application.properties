logging.config=classpath:log4j2.xml
#设置访问端口
#端口
server.port=8080
#以Tomcat为web容器时的字符编码
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true


#设置热部署
#开启热部署
spring.devtools.restart.enabled=true
#重启范围
spring.devtools.restart.additional-paths=src/main/java
#上下文
server.servlet.context-path=/

#设置数据源
#druid数据源配置
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://localhost:3306/web1?useUnicode=true&characterEncoding=utf-8
spring.datasource.druid.username=root
spring.datasource.druid.password=root

#连接池参数，初始数、最大数、最小数、获取连接等待超时时间（毫秒）
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-wait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500


#配置mybatis
#指定mapper*.xml加载位置
mybatis.mapper-locations=classpath:mapper/*.xml
#全局的映射，不用在xml文件写实体类的全路径
mybatis.type-aliases-package=com.bling.dab.domain
#开启驼峰映射
mybatis.configuration.map-underscore-to-camel-case=true
#配置分页插件
#pagehelper分页插件
pagehelper.helper-dialect=mysql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
pagehelper.params=count=countSql

#spring-jpa
spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#------------------------httpClient--------------------------
#最大连接数
http.maxTotal = 100
#并发数
http.defaultMaxPerRoute = 20
#创建连接的最长时间
http.connectTimeout=1000
#从连接池中获取到连接的最长时间
http.connectionRequestTimeout=500
#数据传输的最长时间
http.socketTimeout=10000
#提交请求前测试连接是否可用
http.staleConnectionCheckEnabled=true
#--------------------------redis-----------------------------
#服务器IP
cache.host=127.0.0.1
#服务器端口
cache.port=6379
#服务器用户
#cache.user=
#服务器密码
cache.pwd=123456

#是否集群(true、false)
cache.cluster=false
#集群服务器列表，以“,”分隔
#cache.cluster.ip=172.19.0.223,172.19.0.116

#最大空闲连接数
cache.maxidle=48
#最大连接数
cache.maxtotal=200
#最小空闲连接数, 默认0
cache.minidle=0
#最大等待毫秒数(获取连接时,阻塞时启用)
cache.maxwaitmillis=-1
#连接耗尽时是否阻塞(false报异常,ture阻塞直到超时, 默认true)
cache.block=true
#----------------------------mongodb--------------------------------
spring.data.mongodb.uri= mongodb://localhost:27017/mydb
#设置了密码如下
#spring.data.mongodb.uri=mongodb://kerry:123456@localhost:27017/mydb
#more ip cluster(集群)
#spring.data.mongodb.uri=mongodb://user:pwd@ip1:port1,ip2:port2/database
#----------------------------templates--------------------------------
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html 
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
#------------------------mail-----------------------------
spring.mail.default-encoding=UTF-8
#配置邮件消息
spring.mail.host=smtp.163.com
#发送者的邮箱密码
spring.mail.password=hxp15810665479
#端口
spring.mail.port=25
#协议
spring.mail.protocol=smtp
#发送者的邮箱账号
spring.mail.username=15810665479@163.com
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.debug=true

#--------------------spring线程池-------------------------
spring.task.execution.pool.core-size=3
spring.task.execution.pool.keep-alive=300
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=20
spring.task.execution.thread-name-prefix=async-
#--------------------ActiveMQ，RabbitMQ，Kafka，RocketMQ-------------
